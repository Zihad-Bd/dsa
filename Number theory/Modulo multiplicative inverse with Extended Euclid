
ll x, y, d;

void extendedEuclid(ll a, ll b) {
   if (b == 0) {
      d = a;
      x = 1;
      y = 0;
   } else {
      extendedEuclid(b, a % b);
      ll temp = x;
      x = y;
      y = temp - (a / b) * y;
   }
}

ll MMI(ll m) {
   return (x % m + m) % m;
}

int main() {
   IOS;
   ll tt;
   cin >> tt;
   for (ll cc = 1; cc <= tt; ++cc) {
      ll a, m;
      cin >>a >> m;
      /// M not necessarily need to be prime
      extendedEuclid(a, m);
      cout << "MMI of " << a << " under modulo "<< m << " is " << MMI(m) <<endl;
   }
   return 0;
}
