int timer;
int disc[N], low[N];
bool vis[N], isArticulation[N];
vector<int> g[N];

void dfs (int u, int par) {
	vis[u] = 1;
	disc[u] = low[u] = ++timer;
	int children = 0;
	for (auto v : g[u]) {
		if (v == par) {
			continue;
		}
		if (vis[v]) {
			low[u] = min(low[u], disc[v]);
		} else {
			dfs(v, u);
			low[u] = min(low[u], low[v]);
			if (low[v] >= disc[u] && par != -1)
				isArticulation[u] = 1;
			children++;
		}
	}
	if(par == -1 && children > 1)
		isArticulation[u] = 1;
}

int main() {
   int n = 0;
	for (int i = 0; i < n; i++) {
		if ( !vis[i]) {
			dfs(i, -1);
		}
	}
	return 0;
}
