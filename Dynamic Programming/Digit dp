int n,m;
char d;
char a[2005],b[2005];
int memo[2005][2005][3][3];
int dp(int i,int rem,int small,int big,int num)
{
    if(i==n)
    {
        if(rem==0)
        {
            //pr(num);
            return 1;
        }
        return 0;
    }
    if(memo[i][rem][small][big]!=-1)
    {
        return memo[i][rem][small][big];
    }
    int allow[10]={};
    if(i%2)
    {
        if(small==0&&b[i]<d||big==0&&a[i]>d)
        {
            return 0;
        }
        allow[d-'0']=1;
    }
    else
    {
        if(small&&big)
        {
            for(int j=0;j<=9;++j)
            {
                allow[j]=1;
            }
        }
        else if(small==0&&big)
        {
            for(int j=0;j<=b[i]-'0';++j)
            {
                allow[j]=1;
            }
        }
        else if(small&&big==0)
        {
            for(int j=a[i]-'0';j<=9;++j)
            {
                allow[j]=1;
            }
        }
        else
        {
            for(int j=a[i]-'0';j<=b[i]-'0';++j)
            {
                allow[j]=1;
            }
        }
        allow[d-'0']=0;
    }
    int ret=0;
    for(int k=0;k<=9;++k)
    {
        if(i==0&&k==0)
        {
            continue;
        }
        if(allow[k])
        {
            int temp_small=small,temp_big=big;
            if(b[i]-'0'>k)
            {
                temp_small=1;
            }
            if(a[i]-'0'<k)
            {
                temp_big=1;
            }
            ret=(ret+dp(i+1,(rem*10+k)%m,temp_small,temp_big,num*10+k))%mod;
        }
    }
    return memo[i][rem][small][big]=ret;
}
int main()
{
    scanf("%d %c",&m,&d);
    scanf("%s%s",a,b);
    n=strlen(a);
    if(n==1)
    {
        int ans=0;
        for(int i=a[0]-'0';i<=b[0]-'0';++i)
        {
            if(i%m==0&&i!=d-'0')
            {
                ++ans;
            }
        }
        printf("%d",ans);
    }
    else
    {
        me(memo,-1);
        printf("%d",(dp(0,0,0,0,0)+mod)%mod);
    }
    return 0;
}
